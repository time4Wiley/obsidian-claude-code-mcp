import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

const buildOptions = {
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"node-pty", // External native module
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	loader: {
		".py": "text", // Bundle Python scripts as text
		".png": "dataurl", // Bundle PNG files as data URLs
	},
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	minify: false,
	platform: "node",
	conditions: ["node"],
};

try {
	if (prod) {
		await esbuild.build(buildOptions);
	} else {
		const ctx = await esbuild.context(buildOptions);
		await ctx.watch();
		console.log("ðŸ‘€ Watching for changes...");
	}
} catch (error) {
	console.error("Build failed:", error);
	process.exit(1);
}
